<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title><%= game.name %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">

      var socket = io();
      var currentPlayer = null;
      var allPlayers = null;

      $(document).ready(function () {
        socket.emit('start', "<%= username%>");
        registerEvents();
      });

      function registerEvents() {
        socket.on('init', function(player, boardConfig, board, players){
          if(currentPlayer === null){
            currentPlayer = player;
            buildTable(boardConfig.boardSize, board);
            $(".cell").on('click', function () {
              var cell = getCellPosition($(this));
              $(this).fadeTo('fast', 0.1).fadeTo('fast', 1.0);
              socket.emit('cell_click', cell, currentPlayer);
              return false;
            });
            updateLeadBoard(players);
            initHeader(player);
          }
        });

        socket.on('after_cell_click', function(cell, player, players, board){
          updateBoard(board);
          updateLeadBoard(players);
          updateHeader(players[currentPlayer.id]);
        });
      }

      function initHeader(player){
        $(".color").css("background-color", player.color);
        $(".playername").html(player.name);
        $(".score").html(player.score);
        $(".rank").html($("#player_"+player.id).html());
      }

      function updateHeader(player){
        $(".score").html(player.score);
        var rank = $(".rank");
        var previousRank = rank.html();
        var newRank = $("#player_"+player.id).html();

        var rankChange = $(".rank-change");
        if(parseInt(newRank)<parseInt(previousRank)){
          rankChange.css('background-image', 'url("/images/rank/up.png")');
        }else if(parseInt(newRank)>parseInt(previousRank)){
          rankChange.css('background-image', 'url("/images/rank/down.png")');
        }
        rank.html(newRank);
      }

      function updateBoard(board){
        for(var i = 0; i < board.length; i++) {
          for(var j = 0; j < board.length; j++) {
            var cell = $("#"+i+"_"+j);
            cell.css("background-color", board[i][j].color);
            if(board[i][j].fruit === true){
              cell.css('background-image', 'url("/images/fruits/'+board[i][j].fruitNumber+'.png")');
            }else if(board[i][j].pumpkin === true){
              cell.css('background-image', 'url("/images/pumpkin.png")');
            }else {
              cell.css('background-image', '');
            }
          }
        }
      }

      function getCellPosition($cell) {
        return {
          row: $cell.data('row'),
          col: $cell.data('col')
        };
      }

      function updateLeadBoard(players){
        $('#leadboard').empty();
        players.forEach(function(player){
          if(player !== null){
            $('#leadboard').append('<tr><td id="player_'+player.id+'" width="5%" style="background-color: '+player.color+'"></td><td>'+player.name+'</td><td align="right" class="sortnr">'+player.score+'</td></tr>');
          }
        });
        sortTable();
      }

      function sortTable(){
        var tbl = document.getElementById("leadboard");
        var store = [];
        for(var i=0, len=tbl.rows.length; i<len; i++){
          var row = tbl.rows[i];
          var sortnr = parseFloat(row.cells[2].textContent || row.cells[2].innerText);
          if(!isNaN(sortnr)) store.push([sortnr, row]);
        }
        store.sort(function(x,y){
          return y[0] - x[0];
        });
        for(var i=0, len=store.length; i<len; i++){
          var currentRow = store[i][1];
          currentRow.cells[0].innerText = i+1;
          tbl.appendChild(currentRow);
        }
        store = null;
      }


      function buildTable(size, board) {
        var tableHtml = '<table class="box" cellpadding="0" cellspacing="0" id="board">';
        for (row = 0; row < size; row++) {
          tableHtml += '<tr>';
          for (col = 0; col < size; col++) {
            tableHtml += '<td class="cell" style="background-color: '+board[row][col].color+'" id="'+ row + '_' + col +'" data-row="' + row + '" data-col="' + col + '"></td>';
          }
          tableHtml += '</tr>';
        }
        tableHtml += '</table>';
        $('.game-wrapper').html(tableHtml);
        $(".box").height($(document).height() - $(".header").height());
        updateBoard(board);
      }

    </script>

  </head>
  <body>
  <div class="container-full" align="center">
      <div class="header">
        <table class="table table-inverse header-table">
          <tr>
            <td class="color" width="5%" ></td>
            <td></td>
            <td width="5%" class="header-score" >Score:</td>
            <td width="10%" class="score header-score" ></td>
            <td width="5%"  class="header-rank" >Rank:</td>
            <td width="10%"  class="rank header-rank" ></td>
            <td width="5%" align="right" class="rank-change" ></td>
          </tr>
        </table>
      </div>
      <div class="game-wrapper"></div>
      <hr/>
      <div class="leadboard" align="center">
        <h2>Leadboard</h2>
        <table class="table table-inverse" id="leadboard">
        </table>
      </div>
    </div>
  </body>
</html>